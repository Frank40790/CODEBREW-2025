#!/usr/bin/python
import random
import time

HEIGHT = 20
WIDTH = 70

def quick_sort(arr):
    def partition(arr, low, high):
        pivot = arr[high]
        i = low - 1
        
        for j in range(low, high):
            # Visualize comparison with pivot
            visualize_state(arr, [j, high])
            
            if arr[j] <= pivot:
                i += 1
                arr[i], arr[j] = arr[j], arr[i]
                
                # Visualize after swap
                visualize_state(arr, [i, j, high])
        
        arr[i + 1], arr[high] = arr[high], arr[i + 1]
        
        # Visualize after placing pivot
        visualize_state(arr, [i + 1])
        
        return i + 1
    
    def quick_sort_recursive(arr, low, high):
        if low < high:
            pi = partition(arr, low, high)
            quick_sort_recursive(arr, low, pi - 1)
            quick_sort_recursive(arr, pi + 1, high)
    
    quick_sort_recursive(arr, 0, len(arr) - 1)



def terminal_print(str):
    print(str, flush=True)

def create_grid():
    return [[' ' for _ in range(WIDTH)] for _ in range(HEIGHT)]

def draw_bars(grid, bar_heights):
    start = 0
    for height in bar_heights:
        draw_rectangle(grid, start, start + 4, 0, height)

        start += 6

def draw_rectangle(grid, x0, x1, y0, y1):
    # Invert y direction
    y0 = HEIGHT - y0 - 1
    y1 = HEIGHT - y1 - 1
    for i in range(y1, y0 + 1):
        if 0 <= i < HEIGHT:
            row = grid[i]
            for j in range(x0, x1 + 1):
                if 0 <= j < WIDTH:
                    row[j] = '#'

def visualize_state(bar_heights, highlighted_indices=None):
    grid = create_grid()
    
    # Draw bars
    start = 0
    for i, height in enumerate(bar_heights):
        char = '@' if highlighted_indices and i in highlighted_indices else '#'
        draw_bar(grid, start, height, char)
        start += 6
    
    terminal_print('\r')
    print_grid(grid)
    time.sleep(0.1)  # Slow down visualization

def draw_bar(grid, start, height, char='#'):
    # Draw the bar
    for i in range(HEIGHT - height - 1, HEIGHT - 1):
        for j in range(start, start + 5):
            if 0 <= j < WIDTH:
                grid[i][j] = char


def print_grid(grid):
    for i in range(HEIGHT):
        terminal_print("".join(grid[i]))

bar_heights = [random.randint(1, 20) for _ in range(10)]
quick_sort(bar_heights)