#!/usr/bin/python
import random
import time

HEIGHT = 20
WIDTH = 70

def radix_sort(arr):
    # Find the maximum number to know number of digits
    max_val = max(arr)
    exp = 1
    
    while max_val // exp > 0:
        counting_sort_for_radix(arr, exp)
        exp *= 10

def counting_sort_for_radix(arr, exp):
    n = len(arr)
    output = [0] * n
    count = [0] * 10
    
    # Count occurrences of each digit
    for i in range(n):
        index = arr[i] // exp % 10
        count[index] += 1
        visualize_state(arr, [i])
    
    # Change count[i] so that count[i] contains actual position of this digit in output[]
    for i in range(1, 10):
        count[i] += count[i - 1]
    
    # Build the output array
    i = n - 1
    while i >= 0:
        index = arr[i] // exp % 10
        output[count[index] - 1] = arr[i]
        count[index] -= 1
        i -= 1
    
    # Copy the output array to arr
    for i in range(n):
        arr[i] = output[i]
        visualize_state(arr, [i])

def terminal_print(str):
    print(str, flush=True)

def create_grid():
    return [[' ' for _ in range(WIDTH)] for _ in range(HEIGHT)]

def draw_bars(grid, bar_heights):
    start = 0
    for height in bar_heights:
        draw_rectangle(grid, start, start + 4, 0, height)

        start += 6

def draw_rectangle(grid, x0, x1, y0, y1):
    # Invert y direction
    y0 = HEIGHT - y0 - 1
    y1 = HEIGHT - y1 - 1
    for i in range(y1, y0 + 1):
        if 0 <= i < HEIGHT:
            row = grid[i]
            for j in range(x0, x1 + 1):
                if 0 <= j < WIDTH:
                    row[j] = '#'

def visualize_state(bar_heights, highlighted_indices=None):
    grid = create_grid()
    
    # Draw bars
    start = 0
    for i, height in enumerate(bar_heights):
        char = '@' if highlighted_indices and i in highlighted_indices else '#'
        draw_bar(grid, start, height, char)
        start += 6
    
    terminal_print('\r')
    print_grid(grid)
    time.sleep(0.1)  # Slow down visualization

def draw_bar(grid, start, height, char='#'):
    # Draw the bar
    for i in range(HEIGHT - height - 1, HEIGHT - 1):
        for j in range(start, start + 5):
            if 0 <= j < WIDTH:
                grid[i][j] = char


def print_grid(grid):
    for i in range(HEIGHT):
        terminal_print("".join(grid[i]))

bar_heights = [random.randint(1, 20) for _ in range(10)]
radix_sort(bar_heights)